#+TITLE: Computing L-functions and Gross-Stark units using Hilbert Eisenstein series
* Introduction
Computation of algebraic invariants attached to real quadratic fields, using algorithms from [[https://arxiv.org/abs/2301.08977][D-J23â€‹]], building on [[https://doi.org/10.1007/s00208-020-02086-2][DPV1]] and [[https://arxiv.org/abs/2103.02490][DPV2]], implemented in ~SageMath~. For corresponding code in ~Magma~, see the repository [[https://github.com/havarddj/drd][DRD]].

* Usage

Navigate to the main directory, run
#+begin_src jupyter-python :session py :kernel sagemath :exports both :results scalar
load "main.sage"
#+end_src

* Examples

** Compute diagonal restriction derivative
Let $D$ be a positive fundamental discriminant, and let $p$ be a prime inert in $\mathbb{Q}(\sqrt D)$.

The diagonal restriction derivative is 
#+begin_src jupyter-python :session py :kernel sagemath :exports both :results scalar

#+end_src

** Compute Gross-Stark units
The function ~GS_unit(D,p)~ computes the Gross--Stark units attached to a positive fundamental discriminant $D$ and a prime $p$ inert in $\Q(\sqrt D)$.

#+begin_src jupyter-python :session py :kernel sagemath :exports both :results scalar
GS_unit(221,3)
#+end_src

** Zagier reduction of quadratic forms

** COMMENT Compute traces of diagonal restrictions
Using some slightly dubious sage code, we are able to compute traces to test a conjecture in DPV2, namely that if we form the Hilbert Eisenstein series attached to a ring class character on $F$, then the $p$-stabilisation is usually non-zero, but the trace down to level $p$ vanishes when $p$ is inert in $F$.

*** The trace does /not/ vanish when $p$ is split:
#+begin_src jupyter-python :session py :kernel sagemath :exports both :results scalar
trace_test(69,17, bd=3)
#+end_src
***  The trace vanishes when $p$ is inert:
#+begin_src jupyter-python :session py :kernel sagemath :exports both :results scalar
trace_test(57,17, bd=3)
#+end_src
In fact, the code suggests something stronger: that the diagonal restriction lies in the complement of the span of the degeneracy maps from level $p$. 

* On compatibility with [[https://github.com/havarddj/drd][magma code]]
+ The function ~DiagonalRestrictionDerivative~ has been tested against the magma code in , and the generating series copy-pasted from sage is found by magma in the space of overconvergent forms, and the constant term gives rise to a GS unit in the usual way.  (Tested for D = 33, p = 5, Q = 2*x^2 + 3*x*y - 3*y^2)
* Todo:
  - [ ] Detach \(p\)-adic precision from number of terms of diagonal restriction derivative, and make intelligent choice automatically
  - [ ] Implement algorithms to compute Stark--Heegner points using ~sage~'s existing \(p\)-adic uniformisation framework, see [[https://doc.sagemath.org/html/en/reference/arithmetic_curves/sage/schemes/elliptic_curves/ell_tate_curve.html][this.]]
